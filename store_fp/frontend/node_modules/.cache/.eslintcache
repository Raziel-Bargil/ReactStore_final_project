[{"C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\index.js":"1","C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\store.js":"2","C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\App.js":"3","C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\screens\\OrderScreen.js":"4","C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\screens\\CartScreen.js":"5","C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\screens\\SigninScreen.js":"6","C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\screens\\ProductScreen.js":"7","C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\screens\\RegisterScreen.js":"8","C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\screens\\HomeScreen.js":"9","C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\screens\\ProfileScreen.js":"10","C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\screens\\PaymentScreen.js":"11","C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\screens\\ShippingScreen.js":"12","C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\screens\\PlaceOrderScreen.js":"13","C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\screens\\ProductsScreen.js":"14","C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\reducers\\productReducers.js":"15","C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\reducers\\cartReducers.js":"16","C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\reducers\\orderReducers.js":"17","C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\reducers\\userReducers.js":"18","C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\components\\PaypalButton.js":"19","C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\actions\\orderActions.js":"20","C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\actions\\cartActions.js":"21","C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\actions\\userActions.js":"22","C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\components\\CheckoutSteps.js":"23","C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\actions\\productActions.js":"24","C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\constants\\userConstants.js":"25","C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\constants\\cartConstants.js":"26","C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\constants\\productConstants.js":"27","C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\constants\\orderConstants.js":"28","C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\screens\\OrdersScreen.js":"29","C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\components\\Rating.js":"30"},{"size":286,"mtime":1616305312000,"results":"31","hashOfConfig":"32"},{"size":1675,"mtime":1619283048996,"results":"33","hashOfConfig":"32"},{"size":3623,"mtime":1633171200991,"results":"34","hashOfConfig":"32"},{"size":3928,"mtime":1600537978000,"results":"35","hashOfConfig":"32"},{"size":2684,"mtime":1600537978000,"results":"36","hashOfConfig":"32"},{"size":1894,"mtime":1600537978000,"results":"37","hashOfConfig":"32"},{"size":6161,"mtime":1600537978000,"results":"38","hashOfConfig":"32"},{"size":2430,"mtime":1600537978000,"results":"39","hashOfConfig":"32"},{"size":2784,"mtime":1600537978000,"results":"40","hashOfConfig":"32"},{"size":3747,"mtime":1600537978000,"results":"41","hashOfConfig":"32"},{"size":1422,"mtime":1600537978000,"results":"42","hashOfConfig":"32"},{"size":2051,"mtime":1600537978000,"results":"43","hashOfConfig":"32"},{"size":3639,"mtime":1600537978000,"results":"44","hashOfConfig":"32"},{"size":7306,"mtime":1600537978000,"results":"45","hashOfConfig":"32"},{"size":2665,"mtime":1619283450643,"results":"46","hashOfConfig":"32"},{"size":1019,"mtime":1619281132371,"results":"47","hashOfConfig":"32"},{"size":2841,"mtime":1600537978000,"results":"48","hashOfConfig":"32"},{"size":1428,"mtime":1619283114949,"results":"49","hashOfConfig":"32"},{"size":1416,"mtime":1600537978000,"results":"50","hashOfConfig":"32"},{"size":3535,"mtime":1619282327189,"results":"51","hashOfConfig":"32"},{"size":1219,"mtime":1632838926497,"results":"52","hashOfConfig":"32"},{"size":1995,"mtime":1619283181541,"results":"53","hashOfConfig":"32"},{"size":412,"mtime":1619277875632,"results":"54","hashOfConfig":"32"},{"size":3603,"mtime":1632851665976,"results":"55","hashOfConfig":"32"},{"size":570,"mtime":1619283145828,"results":"56","hashOfConfig":"32"},{"size":216,"mtime":1619278621691,"results":"57","hashOfConfig":"32"},{"size":1037,"mtime":1619283403242,"results":"58","hashOfConfig":"32"},{"size":1052,"mtime":1619282404919,"results":"59","hashOfConfig":"32"},{"size":2115,"mtime":1600537978000,"results":"60","hashOfConfig":"32"},{"size":1445,"mtime":1600537978000,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1wd3sin",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"64"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"64"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"64"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"64"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\index.js",[],["135","136"],"C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\store.js",[],"C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\App.js",[],"C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\screens\\OrderScreen.js",["137","138","139"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { createOrder, detailsOrder, payOrder } from '../actions/orderActions';\nimport PaypalButton from '../components/PaypalButton';\nfunction OrderScreen(props) {\n\n  const orderPay = useSelector(state => state.orderPay);\n  const { loading: loadingPay, success: successPay, error: errorPay } = orderPay;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (successPay) {\n      props.history.push(\"/profile\");\n    } else {\n      dispatch(detailsOrder(props.match.params.id));\n    }\n    return () => {\n    };\n  }, [successPay]);\n\n  const handleSuccessPayment = (paymentResult) => {\n    dispatch(payOrder(order, paymentResult));\n  }\n\n  const orderDetails = useSelector(state => state.orderDetails);\n  const { loading, order, error } = orderDetails;\n\n  return loading ? <div>Loading ...</div> : error ? <div>{error}</div> :\n\n    <div>\n      <div className=\"placeorder\">\n        <div className=\"placeorder-info\">\n          <div>\n            <h3>\n              Shipping\n          </h3>\n            <div>\n              {order.shipping.address}, {order.shipping.city},\n          {order.shipping.postalCode}, {order.shipping.country},\n          </div>\n            <div>\n              {order.isDelivered ? \"Delivered at \" + order.deliveredAt : \"Not Delivered.\"}\n            </div>\n          </div>\n          <div>\n            <h3>Payment</h3>\n            <div>\n              Payment Method: {order.payment.paymentMethod}\n            </div>\n            <div>\n              {order.isPaid ? \"Paid at \" + order.paidAt : \"Not Paid.\"}\n            </div>\n          </div>\n          <div>\n            <ul className=\"cart-list-container\">\n              <li>\n                <h3>\n                  Shopping Cart\n          </h3>\n                <div>\n                  Price\n          </div>\n              </li>\n              {\n                order.orderItems.length === 0 ?\n                  <div>\n                    Cart is empty\n          </div>\n                  :\n                  order.orderItems.map(item =>\n                    <li key={item._id}>\n                      <div className=\"cart-image\">\n                        <img src={item.image} alt=\"product\" />\n                      </div>\n                      <div className=\"cart-name\">\n                        <div>\n                          <Link to={\"/product/\" + item.product}>\n                            {item.name}\n                          </Link>\n\n                        </div>\n                        <div>\n                          Qty: {item.qty}\n                        </div>\n                      </div>\n                      <div className=\"cart-price\">\n                        ${item.price}\n                      </div>\n                    </li>\n                  )\n              }\n            </ul>\n          </div>\n\n\n        </div>\n        <div className=\"placeorder-action\">\n          <ul>\n            <li className=\"placeorder-actions-payment\">\n              {loadingPay && <div>Finishing Payment...</div>}\n              {!order.isPaid &&\n                <PaypalButton\n                  amount={order.totalPrice}\n                  onSuccess={handleSuccessPayment} />\n              }\n            </li>\n            <li>\n              <h3>Order Summary</h3>\n            </li>\n            <li>\n              <div>Items</div>\n              <div>${order.itemsPrice}</div>\n            </li>\n            <li>\n              <div>Shipping</div>\n              <div>${order.shippingPrice}</div>\n            </li>\n            <li>\n              <div>Tax</div>\n              <div>${order.taxPrice}</div>\n            </li>\n            <li>\n              <div>Order Total</div>\n              <div>${order.totalPrice}</div>\n            </li>\n          </ul>\n\n\n\n        </div>\n\n      </div>\n    </div>\n\n}\n\nexport default OrderScreen;","C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\screens\\CartScreen.js",["140"],"import React, { useEffect } from 'react';\nimport { addToCart, removeFromCart } from '../actions/cartActions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nfunction CartScreen(props) {\n\n  const cart = useSelector(state => state.cart);\n\n  const { cartItems } = cart;\n\n  const productId = props.match.params.id;\n  const qty = props.location.search ? Number(props.location.search.split(\"=\")[1]) : 1;\n  const dispatch = useDispatch();\n  const removeFromCartHandler = (productId) => {\n    dispatch(removeFromCart(productId));\n  }\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty));\n    }\n  }, []);\n\n  const checkoutHandler = () => {\n    props.history.push(\"/signin?redirect=shipping\");\n  }\n\n  return <div className=\"cart\">\n    <div className=\"cart-list\">\n      <ul className=\"cart-list-container\">\n        <li>\n          <h3>\n            Shopping Cart\n          </h3>\n          <div>\n            Price\n          </div>\n        </li>\n        {\n          cartItems.length === 0 ?\n            <div>\n              Cart is empty\n          </div>\n            :\n            cartItems.map(item =>\n              <li>\n                <div className=\"cart-image\">\n                  <img src={item.image} alt=\"product\" />\n                </div>\n                <div className=\"cart-name\">\n                  <div>\n                    <Link to={\"/product/\" + item.product}>\n                      {item.name}\n                    </Link>\n\n                  </div>\n                  <div>\n                    Qty:\n                  <select value={item.qty} onChange={(e) => dispatch(addToCart(item.product, e.target.value))}>\n                      {[...Array(item.countInStock).keys()].map(x =>\n                        <option key={x + 1} value={x + 1}>{x + 1}</option>\n                      )}\n                    </select>\n                    <button type=\"button\" className=\"button\" onClick={() => removeFromCartHandler(item.product)} >\n                      Delete\n                    </button>\n                  </div>\n                </div>\n                <div className=\"cart-price\">\n                  ${item.price}\n                </div>\n              </li>\n            )\n        }\n      </ul>\n\n    </div>\n    <div className=\"cart-action\">\n      <h3>\n        Subtotal ( {cartItems.reduce((a, c) => a + c.qty, 0)} items)\n        :\n         $ {cartItems.reduce((a, c) => a + c.price * c.qty, 0)}\n      </h3>\n      <button onClick={checkoutHandler} className=\"button primary full-width\" disabled={cartItems.length === 0}>\n        Proceed to Checkout\n      </button>\n\n    </div>\n\n  </div>\n}\n\nexport default CartScreen;","C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\screens\\SigninScreen.js",["141"],"import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { signin } from '../actions/userActions';\n\nfunction SigninScreen(props) {\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const userSignin = useSelector(state => state.userSignin);\n  const { loading, userInfo, error } = userSignin;\n  const dispatch = useDispatch();\n  const redirect = props.location.search ? props.location.search.split(\"=\")[1] : '/';\n  useEffect(() => {\n    if (userInfo) {\n      props.history.push(redirect);\n    }\n    return () => {\n      //\n    };\n  }, [userInfo]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(signin(email, password));\n\n  }\n  return <div className=\"form\">\n    <form onSubmit={submitHandler} >\n      <ul className=\"form-container\">\n        <li>\n          <h2>Sign-In</h2>\n        </li>\n        <li>\n          {loading && <div>Loading...</div>}\n          {error && <div>{error}</div>}\n        </li>\n        <li>\n          <label htmlFor=\"email\">\n            Email\n          </label>\n          <input type=\"email\" name=\"email\" id=\"email\" onChange={(e) => setEmail(e.target.value)}>\n          </input>\n        </li>\n        <li>\n          <label htmlFor=\"password\">Password</label>\n          <input type=\"password\" id=\"password\" name=\"password\" onChange={(e) => setPassword(e.target.value)}>\n          </input>\n        </li>\n        <li>\n          <button type=\"submit\" className=\"button primary\">Signin</button>\n        </li>\n        <li>\n          New to amazona?\n        </li>\n        <li>\n          <Link to={redirect === \"/\" ? \"register\" : \"register?redirect=\" + redirect} className=\"button secondary text-center\" >Create your amazona account</Link>\n        </li>\n      </ul>\n    </form>\n  </div>\n}\nexport default SigninScreen;","C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\screens\\ProductScreen.js",["142"],"import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { detailsProduct, saveProductReview } from '../actions/productActions';\nimport Rating from '../components/Rating';\nimport { PRODUCT_REVIEW_SAVE_RESET } from '../constants/productConstants';\n\nfunction ProductScreen(props) {\n  const [qty, setQty] = useState(1);\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState('');\n  const userSignin = useSelector((state) => state.userSignin);\n  const { userInfo } = userSignin;\n  const productDetails = useSelector((state) => state.productDetails);\n  const { product, loading, error } = productDetails;\n  const productReviewSave = useSelector((state) => state.productReviewSave);\n  const { success: productSaveSuccess } = productReviewSave;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (productSaveSuccess) {\n      alert('Review submitted successfully.');\n      setRating(0);\n      setComment('');\n      dispatch({ type: PRODUCT_REVIEW_SAVE_RESET });\n    }\n    dispatch(detailsProduct(props.match.params.id));\n    return () => {\n      //\n    };\n  }, [productSaveSuccess]);\n  const submitHandler = (e) => {\n    e.preventDefault();\n    // dispatch actions\n    dispatch(\n      saveProductReview(props.match.params.id, {\n        name: userInfo.name,\n        rating: rating,\n        comment: comment,\n      })\n    );\n  };\n  const handleAddToCart = () => {\n    props.history.push('/cart/' + props.match.params.id + '?qty=' + qty);\n  };\n\n  return (\n    <div>\n      <div className=\"back-to-result\">\n        <Link to=\"/\">Back to result</Link>\n      </div>\n      {loading ? (\n        <div>Loading...</div>\n      ) : error ? (\n        <div>{error} </div>\n      ) : (\n        <>\n          <div className=\"details\">\n            <div className=\"details-image\">\n              <img src={product.image} alt=\"product\"></img>\n            </div>\n            <div className=\"details-info\">\n              <ul>\n                <li>\n                  <h4>{product.name}</h4>\n                </li>\n                <li>\n                  <a href=\"#reviews\">\n                    <Rating\n                      value={product.rating}\n                      text={product.numReviews + ' reviews'}\n                    />\n                  </a>\n                </li>\n                <li>\n                  Price: <b>${product.price}</b>\n                </li>\n                <li>\n                  Description:\n                  <div>{product.description}</div>\n                </li>\n              </ul>\n            </div>\n            <div className=\"details-action\">\n              <ul>\n                <li>Price: {product.price}</li>\n                <li>\n                  Status:{' '}\n                  {product.countInStock > 0 ? 'In Stock' : 'Unavailable.'}\n                </li>\n                <li>\n                  Qty:{' '}\n                  <select\n                    value={qty}\n                    onChange={(e) => {\n                      setQty(e.target.value);\n                    }}\n                  >\n                    {[...Array(product.countInStock).keys()].map((x) => (\n                      <option key={x + 1} value={x + 1}>\n                        {x + 1}\n                      </option>\n                    ))}\n                  </select>\n                </li>\n                <li>\n                  {product.countInStock > 0 && (\n                    <button\n                      onClick={handleAddToCart}\n                      className=\"button primary\"\n                    >\n                      Add to Cart\n                    </button>\n                  )}\n                </li>\n              </ul>\n            </div>\n          </div>\n          <div className=\"content-margined\">\n            <h2>Reviews</h2>\n            {!product.reviews.length && <div>There is no review</div>}\n            <ul className=\"review\" id=\"reviews\">\n              {product.reviews.map((review) => (\n                <li key={review._id}>\n                  <div>{review.name}</div>\n                  <div>\n                    <Rating value={review.rating}></Rating>\n                  </div>\n                  <div>{review.createdAt.substring(0, 10)}</div>\n                  <div>{review.comment}</div>\n                </li>\n              ))}\n              <li>\n                <h3>Write a customer review</h3>\n                {userInfo ? (\n                  <form onSubmit={submitHandler}>\n                    <ul className=\"form-container\">\n                      <li>\n                        <label htmlFor=\"rating\">Rating</label>\n                        <select\n                          name=\"rating\"\n                          id=\"rating\"\n                          value={rating}\n                          onChange={(e) => setRating(e.target.value)}\n                        >\n                          <option value=\"1\">1- Poor</option>\n                          <option value=\"2\">2- Fair</option>\n                          <option value=\"3\">3- Good</option>\n                          <option value=\"4\">4- Very Good</option>\n                          <option value=\"5\">5- Excelent</option>\n                        </select>\n                      </li>\n                      <li>\n                        <label htmlFor=\"comment\">Comment</label>\n                        <textarea\n                          name=\"comment\"\n                          value={comment}\n                          onChange={(e) => setComment(e.target.value)}\n                        ></textarea>\n                      </li>\n                      <li>\n                        <button type=\"submit\" className=\"button primary\">\n                          Submit\n                        </button>\n                      </li>\n                    </ul>\n                  </form>\n                ) : (\n                  <div>\n                    Please <Link to=\"/signin\">Sign-in</Link> to write a review.\n                  </div>\n                )}\n              </li>\n            </ul>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\nexport default ProductScreen;\n","C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\screens\\RegisterScreen.js",["143","144"],"import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { register } from '../actions/userActions';\n\nfunction RegisterScreen(props) {\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [rePassword, setRePassword] = useState('');\n  const userRegister = useSelector(state => state.userRegister);\n  const { loading, userInfo, error } = userRegister;\n  const dispatch = useDispatch();\n\n  const redirect = props.location.search ? props.location.search.split(\"=\")[1] : '/';\n  useEffect(() => {\n    if (userInfo) {\n      props.history.push(redirect);\n    }\n    return () => {\n      //\n    };\n  }, [userInfo]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(register(name, email, password));\n  }\n  return <div className=\"form\">\n    <form onSubmit={submitHandler} >\n      <ul className=\"form-container\">\n        <li>\n          <h2>Create Account</h2>\n        </li>\n        <li>\n          {loading && <div>Loading...</div>}\n          {error && <div>{error}</div>}\n        </li>\n        <li>\n          <label htmlFor=\"name\">\n            Name\n          </label>\n          <input type=\"name\" name=\"name\" id=\"name\" onChange={(e) => setName(e.target.value)}>\n          </input>\n        </li>\n        <li>\n          <label htmlFor=\"email\">\n            Email\n          </label>\n          <input type=\"email\" name=\"email\" id=\"email\" onChange={(e) => setEmail(e.target.value)}>\n          </input>\n        </li>\n        <li>\n          <label htmlFor=\"password\">Password</label>\n          <input type=\"password\" id=\"password\" name=\"password\" onChange={(e) => setPassword(e.target.value)}>\n          </input>\n        </li>\n        <li>\n          <label htmlFor=\"rePassword\">Re-Enter Password</label>\n          <input type=\"password\" id=\"rePassword\" name=\"rePassword\" onChange={(e) => setRePassword(e.target.value)}>\n          </input>\n        </li>\n        <li>\n          <button type=\"submit\" className=\"button primary\">Register</button>\n        </li>\n        <li>\n          Already have an account?\n          <Link to={redirect === \"/\" ? \"signin\" : \"signin?redirect=\" + redirect} className=\"button secondary text-center\" >Create your amazona account</Link>\n\n        </li>\n\n      </ul>\n    </form>\n  </div>\n}\nexport default RegisterScreen;","C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\screens\\HomeScreen.js",["145","146"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { listProducts } from '../actions/productActions';\nimport Rating from '../components/Rating';\n\nfunction HomeScreen(props) {\n  const [searchKeyword, setSearchKeyword] = useState('');\n  const [sortOrder, setSortOrder] = useState('');\n  const category = props.match.params.id ? props.match.params.id : '';\n  const productList = useSelector((state) => state.productList);\n  const { products, loading, error } = productList;\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(listProducts(category));\n\n    return () => {\n      //\n    };\n  }, [category]);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(listProducts(category, searchKeyword, sortOrder));\n  };\n  const sortHandler = (e) => {\n    setSortOrder(e.target.value);\n    dispatch(listProducts(category, searchKeyword, sortOrder));\n  };\n\n  return (\n    <>\n      {category && <h2>{category}</h2>}\n\n      <ul className=\"filter\">\n        <li>\n          <form onSubmit={submitHandler}>\n            <input\n              name=\"searchKeyword\"\n              onChange={(e) => setSearchKeyword(e.target.value)}\n            />\n            <button type=\"submit\">Search</button>\n          </form>\n        </li>\n        <li>\n          Sort By{' '}\n          <select name=\"sortOrder\" onChange={sortHandler}>\n            <option value=\"\">Newest</option>\n            <option value=\"lowest\">Lowest</option>\n            <option value=\"highest\">Highest</option>\n          </select>\n        </li>\n      </ul>\n      {loading ? (\n        <div>Loading...</div>\n      ) : error ? (\n        <div>{error}</div>\n      ) : (\n        <ul className=\"products\">\n          {products.map((product) => (\n            <li key={product._id}>\n              <div className=\"product\">\n                <Link to={'/product/' + product._id}>\n                  <img\n                    className=\"product-image\"\n                    src={product.image}\n                    alt=\"product\"\n                  />\n                </Link>\n                <div className=\"product-name\">\n                  <Link to={'/product/' + product._id}>{product.name}</Link>\n                </div>\n                <div className=\"product-brand\">{product.brand}</div>\n                <div className=\"product-price\">${product.price}</div>\n                <div className=\"product-rating\">\n                  <Rating\n                    value={product.rating}\n                    text={product.numReviews + ' reviews'}\n                  />\n                </div>\n              </div>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n}\nexport default HomeScreen;\n","C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\screens\\ProfileScreen.js",["147"],"import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { logout, update } from '../actions/userActions';\nimport { listMyOrders } from '../actions/orderActions';\nimport { useDispatch, useSelector } from 'react-redux';\n\nfunction ProfileScreen(props) {\n  const [name, setName] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const dispatch = useDispatch();\n\n  const userSignin = useSelector(state => state.userSignin);\n  const { userInfo } = userSignin;\n  const handleLogout = () => {\n    dispatch(logout());\n    props.history.push(\"/signin\");\n  }\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(update({ userId: userInfo._id, email, name, password }))\n  }\n  const userUpdate = useSelector(state => state.userUpdate);\n  const { loading, success, error } = userUpdate;\n\n  const myOrderList = useSelector(state => state.myOrderList);\n  const { loading: loadingOrders, orders, error: errorOrders } = myOrderList;\n  useEffect(() => {\n    if (userInfo) {\n      console.log(userInfo.name)\n      setEmail(userInfo.email);\n      setName(userInfo.name);\n      setPassword(userInfo.password);\n    }\n    dispatch(listMyOrders());\n    return () => {\n\n    };\n  }, [userInfo])\n\n  return <div className=\"profile\">\n    <div className=\"profile-info\">\n      <div className=\"form\">\n        <form onSubmit={submitHandler} >\n          <ul className=\"form-container\">\n            <li>\n              <h2>User Profile</h2>\n            </li>\n            <li>\n              {loading && <div>Loading...</div>}\n              {error && <div>{error}</div>}\n              {success && <div>Profile Saved Successfully.</div>}\n            </li>\n            <li>\n              <label htmlFor=\"name\">\n                Name\n          </label>\n              <input value={name} type=\"name\" name=\"name\" id=\"name\" onChange={(e) => setName(e.target.value)}>\n              </input>\n            </li>\n            <li>\n              <label htmlFor=\"email\">\n                Email\n          </label>\n              <input value={email} type=\"email\" name=\"email\" id=\"email\" onChange={(e) => setEmail(e.target.value)}>\n              </input>\n            </li>\n            <li>\n              <label htmlFor=\"password\">Password</label>\n              <input value={password} type=\"password\" id=\"password\" name=\"password\" onChange={(e) => setPassword(e.target.value)}>\n              </input>\n            </li>\n\n            <li>\n              <button type=\"submit\" className=\"button primary\">Update</button>\n            </li>\n            <li>\n              <button type=\"button\" onClick={handleLogout} className=\"button secondary full-width\">Logout</button>\n            </li>\n\n          </ul>\n        </form>\n      </div>\n    </div>\n    <div className=\"profile-orders content-margined\">\n      {\n        loadingOrders ? <div>Loading...</div> :\n          errorOrders ? <div>{errorOrders} </div> :\n            <table className=\"table\">\n              <thead>\n                <tr>\n                  <th>ID</th>\n                  <th>DATE</th>\n                  <th>TOTAL</th>\n                  <th>PAID</th>\n                  <th>ACTIONS</th>\n                </tr>\n              </thead>\n              <tbody>\n                {orders.map(order => <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt}</td>\n                  <td>{order.totalPrice}</td>\n                  <td>{order.isPaid}</td>\n                  <td>\n                    <Link to={\"/order/\" + order._id}>DETAILS</Link>\n                  </td>\n                </tr>)}\n              </tbody>\n            </table>\n      }\n    </div>\n  </div>\n}\n\nexport default ProfileScreen;","C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\screens\\PaymentScreen.js",["148","149","150"],"import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { savePayment } from '../actions/cartActions';\nimport CheckoutSteps from '../components/CheckoutSteps';\n\nfunction PaymentScreen(props) {\n  const [paymentMethod, setPaymentMethod] = useState('');\n\n  const dispatch = useDispatch();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(savePayment({ paymentMethod }));\n    props.history.push('placeorder');\n  };\n  return (\n    <div>\n      <CheckoutSteps step1 step2 step3></CheckoutSteps>\n      <div className=\"form\">\n        <form onSubmit={submitHandler}>\n          <ul className=\"form-container\">\n            <li>\n              <h2>Payment</h2>\n            </li>\n\n            <li>\n              <div>\n                <input\n                  type=\"radio\"\n                  name=\"paymentMethod\"\n                  id=\"paymentMethod\"\n                  value=\"paypal\"\n                  onChange={(e) => setPaymentMethod(e.target.value)}\n                ></input>\n                <label for=\"paymentMethod\">Paypal</label>\n              </div>\n            </li>\n\n            <li>\n              <button type=\"submit\" className=\"button primary\">\n                Continue\n              </button>\n            </li>\n          </ul>\n        </form>\n      </div>\n    </div>\n  );\n}\nexport default PaymentScreen;\n","C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\screens\\ShippingScreen.js",["151","152","153"],"import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { saveShipping } from '../actions/cartActions';\nimport CheckoutSteps from '../components/CheckoutSteps';\n\nfunction ShippingScreen(props) {\n\n  const [address, setAddress] = useState('');\n  const [city, setCity] = useState('');\n  const [postalCode, setPostalCode] = useState('');\n  const [country, setCountry] = useState('');\n\n  const dispatch = useDispatch();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(saveShipping({ address, city, postalCode, country }));\n    props.history.push('payment');\n  }\n  return <div>\n    <CheckoutSteps step1 step2 ></CheckoutSteps>\n    <div className=\"form\">\n      <form onSubmit={submitHandler} >\n        <ul className=\"form-container\">\n          <li>\n            <h2>Shipping</h2>\n          </li>\n\n          <li>\n            <label htmlFor=\"address\">\n              Address\n          </label>\n            <input type=\"text\" name=\"address\" id=\"address\" onChange={(e) => setAddress(e.target.value)}>\n            </input>\n          </li>\n          <li>\n            <label htmlFor=\"city\">\n              City\n          </label>\n            <input type=\"text\" name=\"city\" id=\"city\" onChange={(e) => setCity(e.target.value)}>\n            </input>\n          </li>\n          <li>\n            <label htmlFor=\"postalCode\">\n              Postal Code\n          </label>\n            <input type=\"text\" name=\"postalCode\" id=\"postalCode\" onChange={(e) => setPostalCode(e.target.value)}>\n            </input>\n          </li>\n          <li>\n            <label htmlFor=\"country\">\n              Country\n          </label>\n            <input type=\"text\" name=\"country\" id=\"country\" onChange={(e) => setCountry(e.target.value)}>\n            </input>\n          </li>\n\n\n          <li>\n            <button type=\"submit\" className=\"button primary\">Continue</button>\n          </li>\n\n        </ul>\n      </form>\n    </div>\n  </div>\n\n}\nexport default ShippingScreen;","C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\screens\\PlaceOrderScreen.js",["154","155","156"],"import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { createOrder } from '../actions/orderActions';\nfunction PlaceOrderScreen(props) {\n\n  const cart = useSelector(state => state.cart);\n  const orderCreate = useSelector(state => state.orderCreate);\n  const { loading, success, error, order } = orderCreate;\n\n  const { cartItems, shipping, payment } = cart;\n  if (!shipping.address) {\n    props.history.push(\"/shipping\");\n  } else if (!payment.paymentMethod) {\n    props.history.push(\"/payment\");\n  }\n  const itemsPrice = cartItems.reduce((a, c) => a + c.price * c.qty, 0);\n  const shippingPrice = itemsPrice > 100 ? 0 : 10;\n  const taxPrice = 0.15 * itemsPrice;\n  const totalPrice = itemsPrice + shippingPrice + taxPrice;\n\n  const dispatch = useDispatch();\n\n  const placeOrderHandler = () => {\n    // create an order\n    dispatch(createOrder({\n      orderItems: cartItems, shipping, payment, itemsPrice, shippingPrice,\n      taxPrice, totalPrice\n    }));\n  }\n  useEffect(() => {\n    if (success) {\n      props.history.push(\"/order/\" + order._id);\n    }\n\n  }, [success]);\n\n  return <div>\n    <CheckoutSteps step1 step2 step3 step4 ></CheckoutSteps>\n    <div className=\"placeorder\">\n      <div className=\"placeorder-info\">\n        <div>\n          <h3>\n            Shipping\n          </h3>\n          <div>\n            {cart.shipping.address}, {cart.shipping.city},\n          {cart.shipping.postalCode}, {cart.shipping.country},\n          </div>\n        </div>\n        <div>\n          <h3>Payment</h3>\n          <div>\n            Payment Method: {cart.payment.paymentMethod}\n          </div>\n        </div>\n        <div>\n          <ul className=\"cart-list-container\">\n            <li>\n              <h3>\n                Shopping Cart\n          </h3>\n              <div>\n                Price\n          </div>\n            </li>\n            {\n              cartItems.length === 0 ?\n                <div>\n                  Cart is empty\n          </div>\n                :\n                cartItems.map(item =>\n                  <li>\n                    <div className=\"cart-image\">\n                      <img src={item.image} alt=\"product\" />\n                    </div>\n                    <div className=\"cart-name\">\n                      <div>\n                        <Link to={\"/product/\" + item.product}>\n                          {item.name}\n                        </Link>\n\n                      </div>\n                      <div>\n                        Qty: {item.qty}\n                      </div>\n                    </div>\n                    <div className=\"cart-price\">\n                      ${item.price}\n                    </div>\n                  </li>\n                )\n            }\n          </ul>\n        </div>\n\n      \n      </div>\n      <div className=\"placeorder-action\">\n        <ul>\n          <li>\n            <button className=\"button primary full-width\" onClick={placeOrderHandler} >Place Order</button>\n          </li>\n          <li>\n            <h3>Order Summary</h3>\n          </li>\n          <li>\n            <div>Items</div>\n            <div>${itemsPrice}</div>\n          </li>\n          <li>\n            <div>Shipping</div>\n            <div>${shippingPrice}</div>\n          </li>\n          <li>\n            <div>Tax</div>\n            <div>${taxPrice}</div>\n          </li>\n          <li>\n            <div>Order Total</div>\n            <div>${totalPrice}</div>\n          </li>\n        </ul>\n\n\n\n      </div>\n\n    </div>\n  </div>\n\n}\n\nexport default PlaceOrderScreen;","C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\screens\\ProductsScreen.js",["157","158","159","160","161"],"import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport axios from 'axios';\nimport {\n  saveProduct,\n  listProducts,\n  deleteProdcut,\n} from '../actions/productActions';\n\nfunction ProductsScreen(props) {\n  const [modalVisible, setModalVisible] = useState(false);\n  const [id, setId] = useState('');\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState('');\n  const [image, setImage] = useState('');\n  const [brand, setBrand] = useState('');\n  const [category, setCategory] = useState('');\n  const [countInStock, setCountInStock] = useState('');\n  const [description, setDescription] = useState('');\n  const [uploading, setUploading] = useState(false);\n  const productList = useSelector((state) => state.productList);\n  const { loading, products, error } = productList;\n\n  const productSave = useSelector((state) => state.productSave);\n  const {\n    loading: loadingSave,\n    success: successSave,\n    error: errorSave,\n  } = productSave;\n\n  const productDelete = useSelector((state) => state.productDelete);\n  const {\n    loading: loadingDelete,\n    success: successDelete,\n    error: errorDelete,\n  } = productDelete;\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (successSave) {\n      setModalVisible(false);\n    }\n    dispatch(listProducts());\n    return () => {\n      //\n    };\n  }, [successSave, successDelete]);\n\n  const openModal = (product) => {\n    setModalVisible(true);\n    setId(product._id);\n    setName(product.name);\n    setPrice(product.price);\n    setDescription(product.description);\n    setImage(product.image);\n    setBrand(product.brand);\n    setCategory(product.category);\n    setCountInStock(product.countInStock);\n  };\n  const submitHandler = (e) => {\n    e.preventDefault();\n    dispatch(\n      saveProduct({\n        _id: id,\n        name,\n        price,\n        image,\n        brand,\n        category,\n        countInStock,\n        description,\n      })\n    );\n  };\n  const deleteHandler = (product) => {\n    dispatch(deleteProdcut(product._id));\n  };\n  const uploadFileHandler = (e) => {\n    const file = e.target.files[0];\n    const bodyFormData = new FormData();\n    bodyFormData.append('image', file);\n    setUploading(true);\n    axios\n      .post('/api/uploads', bodyFormData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      })\n      .then((response) => {\n        setImage(response.data);\n        setUploading(false);\n      })\n      .catch((err) => {\n        console.log(err);\n        setUploading(false);\n      });\n  };\n  return (\n    <div className=\"content content-margined\">\n      <div className=\"product-header\">\n        <h3>Products</h3>\n        <button className=\"button primary\" onClick={() => openModal({})}>\n          Create Product\n        </button>\n      </div>\n      {modalVisible && (\n        <div className=\"form\">\n          <form onSubmit={submitHandler}>\n            <ul className=\"form-container\">\n              <li>\n                <h2>Create Product</h2>\n              </li>\n              <li>\n                {loadingSave && <div>Loading...</div>}\n                {errorSave && <div>{errorSave}</div>}\n              </li>\n\n              <li>\n                <label htmlFor=\"name\">Name</label>\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  value={name}\n                  id=\"name\"\n                  onChange={(e) => setName(e.target.value)}\n                ></input>\n              </li>\n              <li>\n                <label htmlFor=\"price\">Price</label>\n                <input\n                  type=\"text\"\n                  name=\"price\"\n                  value={price}\n                  id=\"price\"\n                  onChange={(e) => setPrice(e.target.value)}\n                ></input>\n              </li>\n              <li>\n                <label htmlFor=\"image\">Image</label>\n                <input\n                  type=\"text\"\n                  name=\"image\"\n                  value={image}\n                  id=\"image\"\n                  onChange={(e) => setImage(e.target.value)}\n                ></input>\n                <input type=\"file\" onChange={uploadFileHandler}></input>\n                {uploading && <div>Uploading...</div>}\n              </li>\n              <li>\n                <label htmlFor=\"brand\">Brand</label>\n                <input\n                  type=\"text\"\n                  name=\"brand\"\n                  value={brand}\n                  id=\"brand\"\n                  onChange={(e) => setBrand(e.target.value)}\n                ></input>\n              </li>\n              <li>\n                <label htmlFor=\"countInStock\">CountInStock</label>\n                <input\n                  type=\"text\"\n                  name=\"countInStock\"\n                  value={countInStock}\n                  id=\"countInStock\"\n                  onChange={(e) => setCountInStock(e.target.value)}\n                ></input>\n              </li>\n              <li>\n                <label htmlFor=\"name\">Category</label>\n                <input\n                  type=\"text\"\n                  name=\"category\"\n                  value={category}\n                  id=\"category\"\n                  onChange={(e) => setCategory(e.target.value)}\n                ></input>\n              </li>\n              <li>\n                <label htmlFor=\"description\">Description</label>\n                <textarea\n                  name=\"description\"\n                  value={description}\n                  id=\"description\"\n                  onChange={(e) => setDescription(e.target.value)}\n                ></textarea>\n              </li>\n              <li>\n                <button type=\"submit\" className=\"button primary\">\n                  {id ? 'Update' : 'Create'}\n                </button>\n              </li>\n              <li>\n                <button\n                  type=\"button\"\n                  onClick={() => setModalVisible(false)}\n                  className=\"button secondary\"\n                >\n                  Back\n                </button>\n              </li>\n            </ul>\n          </form>\n        </div>\n      )}\n\n      <div className=\"product-list\">\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Name</th>\n              <th>Price</th>\n              <th>Category</th>\n              <th>Brand</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {products.map((product) => (\n              <tr key={product._id}>\n                <td>{product._id}</td>\n                <td>{product.name}</td>\n                <td>{product.price}</td>\n                <td>{product.category}</td>\n                <td>{product.brand}</td>\n                <td>\n                  <button className=\"button\" onClick={() => openModal(product)}>\n                    Edit\n                  </button>{' '}\n                  <button\n                    className=\"button\"\n                    onClick={() => deleteHandler(product)}\n                  >\n                    Delete\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\nexport default ProductsScreen;\n","C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\reducers\\productReducers.js",[],"C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\components\\PaypalButton.js",[],"C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\screens\\OrdersScreen.js",["162","163","164","165","166"],"import React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { listOrders, deleteOrder } from '../actions/orderActions';\n\nfunction OrdersScreen(props) {\n  const orderList = useSelector(state => state.orderList);\n  const { loading, orders, error } = orderList;\n\n  const orderDelete = useSelector(state => state.orderDelete);\n  const { loading: loadingDelete, success: successDelete, error: errorDelete } = orderDelete;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(listOrders());\n    return () => {\n      //\n    };\n  }, [successDelete]);\n\n  const deleteHandler = (order) => {\n    dispatch(deleteOrder(order._id));\n  }\n  return loading ? <div>Loading...</div> :\n    <div className=\"content content-margined\">\n\n      <div className=\"order-header\">\n        <h3>Orders</h3>\n      </div>\n      <div className=\"order-list\">\n\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>DATE</th>\n              <th>TOTAL</th>\n              <th>USER</th>\n              <th>PAID</th>\n              <th>PAID AT</th>\n              <th>DELIVERED</th>\n              <th>DELIVERED AT</th>\n              <th>ACTIONS</th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map(order => (<tr key={order._id}>\n              <td>{order._id}</td>\n              <td>{order.createdAt}</td>\n              <td>{order.totalPrice}</td>\n              <td>{order.user.name}</td>\n              <td>{order.isPaid.toString()}</td>\n              <td>{order.paidAt}</td>\n              <td>{order.isDelivered.toString()}</td>\n              <td>{order.deliveredAt}</td>\n              <td>\n                <Link to={\"/order/\" + order._id} className=\"button secondary\" >Details</Link>\n                {' '}\n                <button type=\"button\" onClick={() => deleteHandler(order)} className=\"button secondary\">Delete</button>\n              </td>\n            </tr>))}\n          </tbody>\n        </table>\n\n      </div>\n    </div>\n}\nexport default OrdersScreen;","C:\\Users\\razie\\Desktop\\store_fp\\store_fp\\frontend\\src\\components\\Rating.js",[],{"ruleId":"167","replacedBy":"168"},{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","severity":1,"message":"172","line":4,"column":10,"nodeType":"173","messageId":"174","endLine":4,"endColumn":21},{"ruleId":"171","severity":1,"message":"175","line":9,"column":60,"nodeType":"173","messageId":"174","endLine":9,"endColumn":68},{"ruleId":"176","severity":1,"message":"177","line":19,"column":6,"nodeType":"178","endLine":19,"endColumn":18,"suggestions":"179"},{"ruleId":"176","severity":1,"message":"180","line":21,"column":6,"nodeType":"178","endLine":21,"endColumn":8,"suggestions":"181"},{"ruleId":"176","severity":1,"message":"182","line":21,"column":6,"nodeType":"178","endLine":21,"endColumn":16,"suggestions":"183"},{"ruleId":"176","severity":1,"message":"184","line":31,"column":6,"nodeType":"178","endLine":31,"endColumn":26,"suggestions":"185"},{"ruleId":"171","severity":1,"message":"186","line":11,"column":10,"nodeType":"173","messageId":"174","endLine":11,"endColumn":20},{"ruleId":"176","severity":1,"message":"182","line":24,"column":6,"nodeType":"178","endLine":24,"endColumn":16,"suggestions":"187"},{"ruleId":"171","severity":1,"message":"188","line":3,"column":8,"nodeType":"173","messageId":"174","endLine":3,"endColumn":13},{"ruleId":"176","severity":1,"message":"189","line":21,"column":6,"nodeType":"178","endLine":21,"endColumn":16,"suggestions":"190"},{"ruleId":"176","severity":1,"message":"189","line":39,"column":6,"nodeType":"178","endLine":39,"endColumn":16,"suggestions":"191"},{"ruleId":"171","severity":1,"message":"192","line":1,"column":17,"nodeType":"173","messageId":"174","endLine":1,"endColumn":26},{"ruleId":"171","severity":1,"message":"193","line":2,"column":10,"nodeType":"173","messageId":"174","endLine":2,"endColumn":14},{"ruleId":"171","severity":1,"message":"194","line":3,"column":10,"nodeType":"173","messageId":"174","endLine":3,"endColumn":21},{"ruleId":"171","severity":1,"message":"192","line":1,"column":17,"nodeType":"173","messageId":"174","endLine":1,"endColumn":26},{"ruleId":"171","severity":1,"message":"193","line":2,"column":10,"nodeType":"173","messageId":"174","endLine":2,"endColumn":14},{"ruleId":"171","severity":1,"message":"194","line":3,"column":10,"nodeType":"173","messageId":"174","endLine":3,"endColumn":21},{"ruleId":"171","severity":1,"message":"195","line":10,"column":11,"nodeType":"173","messageId":"174","endLine":10,"endColumn":18},{"ruleId":"171","severity":1,"message":"196","line":10,"column":29,"nodeType":"173","messageId":"174","endLine":10,"endColumn":34},{"ruleId":"176","severity":1,"message":"197","line":37,"column":6,"nodeType":"178","endLine":37,"endColumn":15,"suggestions":"198"},{"ruleId":"171","severity":1,"message":"195","line":22,"column":11,"nodeType":"173","messageId":"174","endLine":22,"endColumn":18},{"ruleId":"171","severity":1,"message":"196","line":22,"column":30,"nodeType":"173","messageId":"174","endLine":22,"endColumn":35},{"ruleId":"171","severity":1,"message":"199","line":33,"column":14,"nodeType":"173","messageId":"174","endLine":33,"endColumn":27},{"ruleId":"171","severity":1,"message":"200","line":35,"column":12,"nodeType":"173","messageId":"174","endLine":35,"endColumn":23},{"ruleId":"176","severity":1,"message":"189","line":47,"column":6,"nodeType":"178","endLine":47,"endColumn":34,"suggestions":"201"},{"ruleId":"171","severity":1,"message":"202","line":1,"column":28,"nodeType":"173","messageId":"174","endLine":1,"endColumn":36},{"ruleId":"171","severity":1,"message":"196","line":8,"column":28,"nodeType":"173","messageId":"174","endLine":8,"endColumn":33},{"ruleId":"171","severity":1,"message":"199","line":11,"column":20,"nodeType":"173","messageId":"174","endLine":11,"endColumn":33},{"ruleId":"171","severity":1,"message":"200","line":11,"column":66,"nodeType":"173","messageId":"174","endLine":11,"endColumn":77},{"ruleId":"176","severity":1,"message":"189","line":20,"column":6,"nodeType":"178","endLine":20,"endColumn":21,"suggestions":"203"},"no-native-reassign",["204"],"no-negated-in-lhs",["205"],"no-unused-vars","'createOrder' is defined but never used.","Identifier","unusedVar","'errorPay' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'props.history', and 'props.match.params.id'. Either include them or remove the dependency array.","ArrayExpression",["206"],"React Hook useEffect has missing dependencies: 'dispatch', 'productId', and 'qty'. Either include them or remove the dependency array.",["207"],"React Hook useEffect has missing dependencies: 'props.history' and 'redirect'. Either include them or remove the dependency array.",["208"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.match.params.id'. Either include them or remove the dependency array.",["209"],"'rePassword' is assigned a value but never used.",["210"],"'axios' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["211"],["212"],"'useEffect' is defined but never used.","'Link' is defined but never used.","'useSelector' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'order._id' and 'props.history'. Either include them or remove the dependency array.",["213"],"'loadingDelete' is assigned a value but never used.","'errorDelete' is assigned a value but never used.",["214"],"'useState' is defined but never used.",["215"],"no-global-assign","no-unsafe-negation",{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"222","fix":"223"},{"desc":"220","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},"Update the dependencies array to be: [dispatch, props.history, props.match.params.id, successPay]",{"range":"235","text":"236"},"Update the dependencies array to be: [dispatch, productId, qty]",{"range":"237","text":"238"},"Update the dependencies array to be: [props.history, redirect, userInfo]",{"range":"239","text":"240"},"Update the dependencies array to be: [dispatch, productSaveSuccess, props.match.params.id]",{"range":"241","text":"242"},{"range":"243","text":"240"},"Update the dependencies array to be: [category, dispatch]",{"range":"244","text":"245"},"Update the dependencies array to be: [dispatch, userInfo]",{"range":"246","text":"247"},"Update the dependencies array to be: [order._id, props.history, success]",{"range":"248","text":"249"},"Update the dependencies array to be: [successSave, successDelete, dispatch]",{"range":"250","text":"251"},"Update the dependencies array to be: [dispatch, successDelete]",{"range":"252","text":"253"},[660,672],"[dispatch, props.history, props.match.params.id, successPay]",[671,673],"[dispatch, productId, qty]",[675,685],"[props.history, redirect, userInfo]",[1192,1212],"[dispatch, productSaveSuccess, props.match.params.id]",[778,788],[736,746],"[category, dispatch]",[1275,1285],"[dispatch, userInfo]",[1209,1218],"[order._id, props.history, success]",[1385,1413],"[successSave, successDelete, dispatch]",[637,652],"[dispatch, successDelete]"]